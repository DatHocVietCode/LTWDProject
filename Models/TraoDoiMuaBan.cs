// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace WPF_Market.Models;

public partial class TraoDoiMuaBan : DbContext
{
    public TraoDoiMuaBan(DbContextOptions<TraoDoiMuaBan> options)
        : base(options)
    {
    }
    public TraoDoiMuaBan() { }
    protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
    {
        optionsBuilder.UseSqlServer(Properties.Settings.Default.TraoDoiMuaBan);
    }

    public virtual DbSet<Account> Accounts { get; set; }

    public virtual DbSet<Bought> Boughts { get; set; }

    public virtual DbSet<Cart> Carts { get; set; }

    public virtual DbSet<Comment> Comments { get; set; }

    public virtual DbSet<ImageLink> ImageLinks { get; set; }

    public virtual DbSet<Inventory> Inventories { get; set; }

    public virtual DbSet<LstProduct> LstProducts { get; set; }

    public virtual DbSet<Priority> Priorities { get; set; }

    public virtual DbSet<Shop> Shops { get; set; }

    public virtual DbSet<User> Users { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Account>(entity =>
        {
            entity.HasKey(e => e.ID).HasName("PK_Account_1");

            entity.ToTable("Account");

            entity.HasIndex(e => e.UserName, "UQ__Account__C9F28456F3DF6B0D").IsUnique();

            entity.Property(e => e.Email)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.Password).HasMaxLength(50);
            entity.Property(e => e.UserName)
                .IsRequired()
                .HasMaxLength(50);
        });

        modelBuilder.Entity<Bought>(entity =>
        {
            entity.HasKey(e => e.IDInvoice);

            entity.ToTable("Bought");

            entity.Property(e => e.DateBought).HasColumnType("datetime");

            entity.HasOne(d => d.IDUserNavigation).WithMany(p => p.Boughts)
                .HasForeignKey(d => d.IDUser)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Bought__IDUser__2BFE89A6");
        });

        modelBuilder.Entity<Cart>(entity =>
        {
            entity.HasKey(e => new { e.IDUser, e.IDProduct });

            entity.ToTable("Cart");

            entity.HasOne(d => d.IDProductNavigation).WithMany(p => p.Carts)
                .HasForeignKey(d => d.IDProduct)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Cart__IDProduct__45F365D3");

            entity.HasOne(d => d.IDUserNavigation).WithMany(p => p.Carts)
                .HasForeignKey(d => d.IDUser)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Cart_Product_User");
        });

        modelBuilder.Entity<Comment>(entity =>
        {
            entity.HasKey(e => new { e.DataTimeCreate, e.IDUser, e.IDProduct }).HasName("PK__Comment__18F87060396AC099");

            entity.ToTable("Comment");

            entity.Property(e => e.DataTimeCreate).HasColumnType("datetime");
            entity.Property(e => e.Comment1).HasColumnName("Comment");
        });

        modelBuilder.Entity<ImageLink>(entity =>
        {
            entity.HasKey(e => new { e.IDProduct, e.ImageLink1 });

            entity.ToTable("ImageLink");

            entity.Property(e => e.ImageLink1)
                .HasMaxLength(255)
                .HasColumnName("ImageLink");

            entity.HasOne(d => d.IDProductNavigation).WithMany(p => p.ImageLinks)
                .HasForeignKey(d => d.IDProduct)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_ImageLink_Inventory");
        });

        modelBuilder.Entity<Inventory>(entity =>
        {
            entity.HasKey(e => e.IDProduct).HasName("PK__Inventor__4290D1794A33FD73");

            entity.ToTable("Inventory");

            entity.Property(e => e.BoughtTime).HasColumnType("datetime");
            entity.Property(e => e.Priority).HasDefaultValueSql("((0))");
            entity.Property(e => e.Type).HasMaxLength(50);

            entity.HasOne(d => d.IDShopNavigation).WithMany(p => p.Inventories)
                .HasForeignKey(d => d.IDShop)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_IDShop");

            entity.HasMany(d => d.IDUsers).WithMany(p => p.IDProducts)
                .UsingEntity<Dictionary<string, object>>(
                    "FaVProduct",
                    r => r.HasOne<User>().WithMany()
                        .HasForeignKey("IDUser")
                        .OnDelete(DeleteBehavior.ClientSetNull)
                        .HasConstraintName("FK__FaVProduc__IDUse__48CFD27E"),
                    l => l.HasOne<Inventory>().WithMany()
                        .HasForeignKey("IDProduct")
                        .OnDelete(DeleteBehavior.ClientSetNull)
                        .HasConstraintName("FK__FaVProduc__IDPro__47DBAE45"),
                    j =>
                    {
                        j.HasKey("IDProduct", "IDUser").HasName("PK__FaVProdu__AC3EBCE4279CDD42");
                        j.ToTable("FaVProduct");
                    });
        });

        modelBuilder.Entity<LstProduct>(entity =>
        {
            entity.HasKey(e => new { e.IDInvoice, e.IDProduct }).HasName("PK__LstProdu__C98150671B347B2F");

            entity.ToTable("LstProduct");

            entity.Property(e => e.Number).HasDefaultValueSql("((1))");

            entity.HasOne(d => d.IDInvoiceNavigation).WithMany(p => p.LstProducts)
                .HasForeignKey(d => d.IDInvoice)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__LstProduc__IDInv__2CF2ADDF");

            entity.HasOne(d => d.IDProductNavigation).WithMany(p => p.LstProducts)
                .HasForeignKey(d => d.IDProduct)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__LstProduc__IDPro__2DE6D218");
        });

        modelBuilder.Entity<Priority>(entity =>
        {
            entity.HasKey(e => new { e.IDuser, e.IDproduct }).HasName("PK__Priority__83F81D44931B9824");

            entity.ToTable("Priority");

            entity.HasOne(d => d.IDproductNavigation).WithMany(p => p.Priorities)
                .HasForeignKey(d => d.IDproduct)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Priority__IDprod__02FC7413");

            entity.HasOne(d => d.IDuserNavigation).WithMany(p => p.Priorities)
                .HasForeignKey(d => d.IDuser)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Priority__IDuser__03F0984C");
        });

        modelBuilder.Entity<Shop>(entity =>
        {
            entity.HasKey(e => e.IDShop).HasName("PK__Shop__C52550285E540EBA");

            entity.ToTable("Shop");

            entity.Property(e => e.IDShop).ValueGeneratedNever();
            entity.Property(e => e.Address).HasMaxLength(50);
            entity.Property(e => e.Email).HasMaxLength(50);
            entity.Property(e => e.NameShop).HasMaxLength(50);
            entity.Property(e => e.PhoneNumber).HasMaxLength(50);

            entity.HasOne(d => d.IDShopNavigation).WithOne(p => p.Shop)
                .HasForeignKey<Shop>(d => d.IDShop)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_ShopID");
        });

        modelBuilder.Entity<User>(entity =>
        {
            entity.HasKey(e => e.ID).HasName("PK__User__3214EC27E9B90458");

            entity.ToTable("User");

            entity.Property(e => e.ID).ValueGeneratedNever();
            entity.Property(e => e.Address).HasMaxLength(50);
            entity.Property(e => e.DoB).HasColumnType("datetime");
            entity.Property(e => e.Email).HasMaxLength(50);
            entity.Property(e => e.IDFavProduct)
                .HasMaxLength(10)
                .IsFixedLength();
            entity.Property(e => e.IDFavShop)
                .HasMaxLength(10)
                .IsFixedLength();
            entity.Property(e => e.IdentityNum).HasMaxLength(50);
            entity.Property(e => e.Name).HasMaxLength(50);
            entity.Property(e => e.PhoneNumber).HasMaxLength(50);
            entity.Property(e => e.Sex).HasMaxLength(50);

            entity.HasOne(d => d.IDNavigation).WithOne(p => p.User)
                .HasForeignKey<User>(d => d.ID)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_UserID");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}